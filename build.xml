<?xml version="1.0" encoding="UTF-8"?><!--http://aaronsaray.com/blog/2013/06/04/integrating-php-qa-tools-with-phing/-->
<project name="magento2x-continousphp" default="help" basedir=".">

    <import file="./vendor/continuousphp/aws-sdk-phing/tasks.xml" />

    <property name="basedir" value="." />
    <property name="vendordir" value="./vendor/bin" />

    <property name="aws.profile" value="" />

    <property name="exec.php" value="php" override="true" />
    <property name="exec.phing" value="${vendordir}/phing" override="true" />
    <property name="exec.phpcpd" value="${vendordir}/phpcpd" override="true" />
    <property name="bin.magento" value="${basedir}/bin/magento" />

    <property name="directory.reports" value="${basedir}/build/reports" override="true" />
    <property name="directory.phpmd" value="${directory.reports}/phpmd" override="true" />
    <property name="directory.phpcpd" value="${directory.reports}/phpcpd" override="true" />

    <property name="directory.local.dnd" value="${basedir}/app/code/Dnd" override="true" />
    <property name="directory.local.project" value="${basedir}/app/code/${project.directory}" override="true" />

    <property name="magento.db.host" value="localhost" />
    <property name="magento.db.user" value="root" />
    <property name="magento.db.pass" value="" />
    <property name="magento.db.name" value="magento2" />


    <target name="quality-analysis">
        <phingcall target="php-lint" />
        <phingcall target="phpcpd" />
        <!--<phingcall target="phpmd" />-->
    </target>

    <target name="php-lint" description="Perform syntax check of sourcecode files">
        <echo msg="Checking PHP lint in local directories..." />
        <apply executable="${exec.php}" failonerror="true">
            <arg value="-l" />
            <fileset dir="${directory.local.dnd}">
                <include name="**/*.php" />
            </fileset>
            <fileset dir="${directory.local.project}">
                <include name="**/*.php" />
            </fileset>
        </apply>
        <echo msg="OK" />
    </target>

    <target name="phpcpd">
        <trycatch>
            <try>
                <echo msg="Starting phpcpd parsing." />
                <exec executable="${exec.phpcpd}" checkreturn="true">
                    <arg path="${directory.local.dnd}" />
                    <!--<arg value=">${directory.phpcpd}/output.txt" />-->
                </exec>
                <exec executable="${exec.phpcpd}" checkreturn="true">
                    <arg path="${directory.local.project}" />
                    <!--<arg value=">${directory.phpcpd}/output.txt" />-->
                </exec>
                <echo msg="phpcpd finished" />
            </try>
            <catch>
                <echo msg="phpcpd is not installed." level="warning" />
            </catch>
        </trycatch>
    </target>

    <target name="check-magento-requirements">
        <!-- Check mysql client tools -->
        <exec command="which mysql" outputProperty="bin.mysql" returnProperty="mage.requirement.mysql" />
        <if>
            <equals arg1="${mage.requirement.mysql}" arg2="1" />
            <then>
                <fail msg="MySQL client tools was not found. Please check installation."/>
            </then>
        </if>
        <!-- Check PHP -->
        <exec command="which php" outputProperty="bin.php" returnProperty="mage.requirement.php" />
        <if>
            <equals arg1="${mage.requirement.php}" arg2="1" />
            <then>
                <fail msg="PHP CLI was not found. Please check installation." />
            </then>
        </if>
    </target>

    <target name="install-database">
        <echo message="Droping ${magento.db.name} database..."/>
        <exec command="${bin.mysql} -u${magento.db.user} -p${magento.db.pass} -e'DROP DATABASE IF EXISTS ${magento.db.name}'" checkreturn="true" passthru="true" />
        <echo msg="OK" />

        <echo msg="Installing ${magento.db.name} database..." />
        <exec command="${bin.mysql} -u${magento.db.user} -p${magento.db.pass} -e 'CREATE DATABASE ${magento.db.name} CHARACTER SET utf8 COLLATE utf8_general_ci;'" checkreturn="true" passthru="true" />
        <echo msg="OK" />
    </target>

    <target name="install-magento" depends="check-magento-requirements,install-database">
        <echo msg="Installing Magento..." />
        <exec command="${bin.magento} setup:install
            --base-url=http://www.magento2.dev/
            --db-host=${magento.db.host}
            --db-name=${magento.db.name}
            --db-user=${magento.db.user}
            --db-password=${magento.db.pass}
            --admin-firstname=Admin
            --admin-lastname=Admin
            --admin-email=matthep.geoffray@gmail.com
            --admin-user=admin
            --admin-password=admin123
            --language=fr_FR
            --currency=EUR
            --timezone=Europe/Paris
            --use-sample-data
            --use-rewrites=1" dir="${basedir}" level="debug" logoutput="true" passthru="true" checkreturn="true" />
        <echo msg="OK" />
    </target>

    <target name="help" description="List available targets">
        <exec executable="${exec.phing}" passthru="true">
            <arg value="-l" />
        </exec>
    </target>

</project>